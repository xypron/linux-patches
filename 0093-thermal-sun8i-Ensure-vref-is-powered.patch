From 6d3f92e48dbd54969809c88eaa4d7101f9a4462b Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Wed, 23 Jun 2021 20:17:46 -0500
Subject: [PATCH 093/120] thermal: sun8i: Ensure vref is powered

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/thermal/sun8i_thermal.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/drivers/thermal/sun8i_thermal.c b/drivers/thermal/sun8i_thermal.c
index a24b892984f8..c4b993446b9a 100644
--- a/drivers/thermal/sun8i_thermal.c
+++ b/drivers/thermal/sun8i_thermal.c
@@ -17,6 +17,7 @@
 #include <linux/of_device.h>
 #include <linux/platform_device.h>
 #include <linux/regmap.h>
+#include <linux/regulator/consumer.h>
 #include <linux/reset.h>
 #include <linux/slab.h>
 #include <linux/thermal.h>
@@ -84,6 +85,7 @@ struct ths_device {
 	struct device				*dev;
 	struct regmap				*regmap;
 	struct reset_control			*reset;
+	struct regulator			*supply;
 	struct clk				*bus_clk;
 	struct clk                              *mod_clk;
 	struct tsensor				sensor[MAX_SENSOR_NUM];
@@ -333,6 +335,10 @@ static int sun8i_ths_resource_init(struct ths_device *tmdev)
 	if (IS_ERR(tmdev->regmap))
 		return PTR_ERR(tmdev->regmap);
 
+	tmdev->supply = devm_regulator_get(dev, "vref");
+	if (IS_ERR(tmdev->supply))
+		return PTR_ERR(tmdev->supply);
+
 	tmdev->reset = devm_reset_control_get_optional(dev, NULL);
 	if (IS_ERR(tmdev->reset))
 		return PTR_ERR(tmdev->reset);
@@ -345,10 +351,14 @@ static int sun8i_ths_resource_init(struct ths_device *tmdev)
 	if (IS_ERR(tmdev->mod_clk))
 		return PTR_ERR(tmdev->mod_clk);
 
-	ret = reset_control_deassert(tmdev->reset);
+	ret = regulator_enable(tmdev->supply);
 	if (ret)
 		return ret;
 
+	ret = reset_control_deassert(tmdev->reset);
+	if (ret)
+		goto disable_supply;
+
 	ret = clk_prepare_enable(tmdev->bus_clk);
 	if (ret)
 		goto assert_reset;
@@ -373,6 +383,8 @@ static int sun8i_ths_resource_init(struct ths_device *tmdev)
 	clk_disable_unprepare(tmdev->bus_clk);
 assert_reset:
 	reset_control_assert(tmdev->reset);
+disable_supply:
+	regulator_disable(tmdev->supply);
 
 	return ret;
 }
@@ -527,6 +539,7 @@ static int sun8i_ths_remove(struct platform_device *pdev)
 	clk_disable_unprepare(tmdev->mod_clk);
 	clk_disable_unprepare(tmdev->bus_clk);
 	reset_control_assert(tmdev->reset);
+	regulator_disable(tmdev->supply);
 
 	return 0;
 }
-- 
2.32.0

